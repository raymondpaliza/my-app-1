node {
  stage('SCM Checkout'){
     git 'https://github.com/raymondpaliza/my-app-1'
  }
  stage('Compile-Package'){
  //Get maven home path
  def mvnHome = tool name: 'maven-3', type: 'maven'
    sh "/usr/local/bin/mvn package"
    }
   
   stage('SonarQube analysis') {
    withSonarQubeEnv('sonar-3') {
      def mvnHome =  tool name: 'maven-3', type: 'maven'
      sh "/usr/local/bin/mvn sonar:sonar"
        }  
    }
    
    stage("Quality Gate Status Check"){
          timeout(time: 1, unit: 'HOURS') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                   slackSend baseUrl: 'https://hooks.slack.com/services/', 
                    channel: '#devops', 
                    color: 'danger', 
                    iconEmoji: '', 
                    message: 'SonarQube Analysis Failed!', 
                    teamDomain: 'DEVOPS', tokenCredentialId: 'Slack_Token', username: ''
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }
          }
      }    
   
      stage('Email Notification'){
       mail bcc: '', body: '''Hi! 
Welcome to Jenkins Email Alerts!

Thanks.

Kind Regards,

Raymond Paliza''', cc: 'raymond.paliza@sprint.com', from: '', replyTo: '', subject: 'Jenkins Job', to: 'raymond.paliza@gmail.com'
    
    }
  stage ('Slack Notification'){ 
    slackSend baseUrl: 'https://hooks.slack.com/services/', 
    channel: '#devops', 
    color: 'good', 
    iconEmoji: '', 
    message: 'Welcome to Jenkins, Slack!', 
    teamDomain: 'DEVOPS', tokenCredentialId: 'Slack_Token', username: ''
  
   }

}
