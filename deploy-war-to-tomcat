node {
  stage('SCM Checkout'){
     git 'https://github.com/raymondpaliza/my-app-1.git'
  }
  stage('Compile-Package'){
  //Get maven home path
  def mvnHome = tool name: 'maven-3', type: 'maven'
    sh "/usr/local/bin/mvn package"
    }
   
   stage('SonarQube analysis') {
    withSonarQubeEnv('sonar-3') {
      def mvnHome =  tool name: 'maven-3', type: 'maven'
      sh "/usr/local/bin/mvn sonar:sonar"
        }  
    }
    

    stage("Quality Gate Status Check"){
          timeout(time: 1, unit: 'HOURS') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                   slackSend baseUrl: 'https://hooks.slack.com/services/', 
                    channel: '#devops', 
                    color: 'danger', 
                    iconEmoji: '', 
                    message: 'SonarQube Analysis Failed!', 
                    teamDomain: 'DEVOPS', tokenCredentialId: 'Slack_Token', username: ''
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }
          }
      }    
      
      stage ('UPLOAD Artifactory'){
  def server = Artifactory.server('Artifactory-3')	
  def rtMaven = Artifactory.newMavenBuild()
  	rtMaven.resolver releaseRepo: 'maven', snapshotRepo: 'maven'
  	rtMaven.deployer server: server, releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot-local'
  	rtMaven.tool = 'maven-3'
  def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean install'
  	server.publishBuildInfo buildInfo  
  }
      
      
      
      
      
      stage('Deploy to Tomcat'){
      
      sshagent(credentials: [''], ignoreMissing: true) {
         //sh 'cp /Users/Shared/Jenkins/Home/workspace/jenkinsfile-git-and-maven@2/target/*.war /usr/local/Cellar/tomcat/9.0.21/libexec/webapps/'
        sh 'cp /Users/Shared/Jenkins/Home/workspace/Sample-Deploy/target/*.war /usr/local/Cellar/tomcat/9.0.21/libexec/webapps/'
        }
     }
      
   
      stage('Email Notification'){
       mail bcc: '', body: '''Hi Raymond! 
Your Build is now Deployed!

Thanks.

Kind Regards,

Raymond Paliza''', cc: 'raymond.paliza@sprint.com', from: '', replyTo: '', subject: 'Jenkins Job', to: 'raymond.paliza@gmail.com'
    
    }
  stage ('Slack Notification'){ 
    slackSend baseUrl: 'https://hooks.slack.com/services/', 
    channel: '#devops', 
    color: 'good', 
    iconEmoji: '', 
    message: 'Your Build is now Deployed!', 
    teamDomain: 'DEVOPS', tokenCredentialId: 'Slack_Token', username: 'Raymond Paliza'
  
   }

}

   
